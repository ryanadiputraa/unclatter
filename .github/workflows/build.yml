name: Build and Push Docker image to AWS ECR

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: unclatter
          IMAGE_TAG: latest

          PORT: 80
          FE_URL: https://unclatter.devzy.my.id
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: 5432
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: unclatter
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_REDIRECT_URL: https://api-unclatter.devzy.my.id/auth/signin/google/callback
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_STATE: ${{ secrets.GOOGLE_STATE }}

        run: |
          docker build \
            --build-arg PORT=$PORT \
            --build-arg FE_URL=$FE_URL \
            --build-arg POSTGRES_HOST=$POSTGRES_HOST \
            --build-arg POSTGRES_PORT=$POSTGRES_PORT \
            --build-arg POSTGRES_USER=$POSTGRES_USER \
            --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            --build-arg POSTGRES_DB=$POSTGRES_DB \
            --build-arg JWT_SECRET=$JWT_SECRET \
            --build-arg GOOGLE_REDIRECT_URL=$GOOGLE_REDIRECT_URL \
            --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
            --build-arg GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
            --build-arg GOOGLE_STATE=$GOOGLE_STATE \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
